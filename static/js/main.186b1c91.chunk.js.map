{"version":3,"sources":["components/Clock.js","components/Toggle.js","components/LoginButton.js","components/LogoutButton.js","components/GuestGreeting.js","components/UserGreeting.js","components/Greeting.js","components/LoginControl.js","components/WarningBanner.js","components/NameForm.js","components/EssayForm.js","components/FlavorForm.js","components/NumberList.js","components/Reservation.js","components/BoilingVerdict.js","components/Calculator.js","components/FancyBorder.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","LoginButton","props","react_default","a","createElement","onClick","LogoutButton","GuestGreeting","UserGreeting","Greeting","isLoggedIn","components_UserGreeting","components_GuestGreeting","WarningBanner","warn","className","NumberList","BoilingVerdict","celsius","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","TemperatureInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","e","onTemperatureChange","target","value","scale","onChange","Calculator","_this2","handleCelsiusChange","handleFahrenheitChange","state","setState","Calculator_TemperatureInput","components_BoilingVerdict","Dialog","FancyBorder","color","title","message","children","SignUpDialog","handleSignUp","login","alert","concat","App","components_Calculator","components_FancyBorder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAEoBA,IAAMC,gBCALD,IAAMC,UCQZC,MARf,SAAqBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,QAASJ,EAAMI,SAAvB,UCMSC,MARf,SAAsBL,GAClB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,QAASJ,EAAMI,SAAvB,WCESE,MAJf,SAAuBN,GACnB,OAAOC,EAAAC,EAAAC,cAAA,8BCGII,MAJf,SAAsBP,GAClB,OAAOC,EAAAC,EAAAC,cAAA,4BCQIK,MAPf,SAAkBR,GAIhB,OAHmBA,EAAMS,WAEHR,EAAAC,EAAAC,cAACO,EAAD,MAA2BT,EAAAC,EAAAC,cAACQ,EAAD,OCFxBd,IAAMC,UCHjC,SAASc,EAAcZ,GAGnB,OADCA,EAAMa,KAAiCZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,WAAf,YAAjB,KAINjB,IAAMC,UCNJD,IAAMC,UCALD,IAAMC,UCALD,IAAMC,UCehBiB,WCfWlB,IAAMC,UCOjBkB,MAPf,SAAwBhB,GACpB,OAAIA,EAAMiB,SAAW,IACZhB,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,uCCHLe,EAAa,CACfC,EAAG,UACHC,EAAG,cAGP,SAASC,EAAUC,GACf,OAA2B,GAAnBA,EAAa,IAAU,EAGnC,SAASC,EAAaN,GAClB,OAAkB,EAAVA,EAAc,EAAK,GAG/B,SAASO,EAAWC,EAAaC,GAC7B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACb,MAAO,GAEX,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,eAGbC,cACF,SAAAA,EAAYnC,GAAO,IAAAoC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMvC,KACD2C,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFHA,4EAQNU,GACTP,KAAKvC,MAAM+C,oBAAoBD,EAAEE,OAAOC,wCAI1C,IAAMxB,EAAcc,KAAKvC,MAAMyB,YACzByB,EAAQX,KAAKvC,MAAMkD,MACzB,OACEjD,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,sCAA8Be,EAAWgC,GAAzC,KACAjD,EAAAC,EAAAC,cAAA,SACE8C,MAAOxB,EACP0B,SAAUZ,KAAKI,uBArBI9C,IAAMC,WAuEtBsD,cA3CX,SAAAA,EAAYpD,GAAO,IAAAqD,EAAA,OAAAhB,OAAAC,EAAA,EAAAD,CAAAE,KAAAa,IACfC,EAAAhB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAe,GAAAV,KAAAH,KAAMvC,KACDsD,oBAAsBD,EAAKC,oBAAoBV,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAgB,IAC3BA,EAAKE,uBAAyBF,EAAKE,uBAAuBX,KAA5BP,OAAAQ,EAAA,EAAAR,CAAAgB,IAC9BA,EAAKG,MAAQ,CACT/B,YAAa,GAAIyB,MAAO,KALbG,mFASC5B,GAChBc,KAAKkB,SAAS,CAACP,MAAO,IAAKzB,+DAGRA,GACnBc,KAAKkB,SAAS,CAACP,MAAO,IAAKzB,iDAI3B,IAAMyB,EAAQX,KAAKiB,MAAMN,MACnBzB,EAAcc,KAAKiB,MAAM/B,YACzBR,EAAoB,MAAViC,EAAgB1B,EAAWC,EAAaJ,GAAaI,EAC/DH,EAAuB,MAAV4B,EAAgB1B,EAAWC,EAAaF,GAAeE,EAE1E,OACIxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuD,EAAD,CACAR,MAAM,IACNzB,YAAaR,EACb8B,oBAAqBR,KAAKe,sBAE1BrD,EAAAC,EAAAC,cAACuD,EAAD,CACAR,MAAM,IACNzB,YAAaH,EACbyB,oBAAqBR,KAAKgB,yBAE1BtD,EAAAC,EAAAC,cAACwD,EAAD,CACA1C,QAASW,WAAWX,aArCXpB,IAAMC,iBCzC/B,SAAS8D,EAAO5D,GACZ,OACEC,EAAAC,EAAAC,cAAC0D,EAAD,CAAaC,MAAM,QACjB7D,EAAAC,EAAAC,cAAA,MAAIW,UAAU,gBACXd,EAAM+D,OAET9D,EAAAC,EAAAC,cAAA,KAAGW,UAAU,kBACVd,EAAMgE,SAERhE,EAAMiE,UAKf,SAASJ,EAAY7D,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKW,UAAW,2BAA6Bd,EAAM8D,OAC9C9D,EAAMiE,cAoCJC,cA9BX,SAAAA,EAAYlE,GAAO,IAAAoC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACjB9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMvC,KACD2C,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAK+B,aAAe/B,EAAK+B,aAAavB,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKoB,MAAQ,CAACY,MAAO,IAJJhC,wEAQjB,OACEnC,EAAAC,EAAAC,cAACyD,EAAD,CAAQG,MAAM,2BACNC,QAAQ,+BACd/D,EAAAC,EAAAC,cAAA,SAAO8C,MAAOV,KAAKiB,MAAMY,MAClBjB,SAAUZ,KAAKI,eAEtB1C,EAAAC,EAAAC,cAAA,UAAQC,QAASmC,KAAK4B,cAAtB,qDAOOrB,GACXP,KAAKkB,SAAS,CAACW,MAAOtB,EAAEE,OAAOC,+CAI/BoB,MAAK,mBAAAC,OAAoB/B,KAAKiB,MAAMY,MAA/B,aA3BgBvE,IAAMC,iBCGlByE,MArBf,WACE,OACEtE,EAAAC,EAAAC,cAAA,WAaEF,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAACsE,EAAD,QCpBcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.186b1c91.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        };\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        console.log('unmounted');\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h1>Hello, world!</h1>\r\n          <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Clock;","import React from 'react';\r\n\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isToggleOn: true\r\n        };\r\n\r\n        // This binding is necessary to make `this` work in the callback\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(state => ({\r\n            isToggleOn: !state.isToggleOn\r\n        }));\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <button onClick={this.handleClick}>\r\n            {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Toggle;","import React from 'react';\r\n\r\nfunction LoginButton(props) {\r\n    return (\r\n      <button onClick={props.onClick}>\r\n        Login\r\n      </button>\r\n    );\r\n  }\r\n\r\nexport default LoginButton;","import React from 'react';\r\n\r\nfunction LogoutButton(props) {\r\n    return (\r\n      <button onClick={props.onClick}>\r\n        Logout\r\n      </button>\r\n    );\r\n  }\r\n\r\nexport default LogoutButton;","import React from 'react';\r\n\r\nfunction GuestGreeting(props) {\r\n    return <h1>Please sign up.</h1>;\r\n}\r\n\r\nexport default GuestGreeting;","import React from 'react';\r\n\r\nfunction UserGreeting(props) {\r\n    return <h1>Welcome back!</h1>;\r\n}\r\n\r\nexport default UserGreeting;","import React from 'react';\r\nimport GuestGreeting from './GuestGreeting';\r\nimport UserGreeting from './UserGreeting';\r\n\r\nfunction Greeting(props) {\r\n  const isLoggedIn = props.isLoggedIn;\r\n  let result;\r\n  isLoggedIn ? result = <UserGreeting /> : result= <GuestGreeting />\r\n  return result;\r\n}\r\n\r\nexport default Greeting;","import React from 'react';\r\nimport LoginButton from './LoginButton';\r\nimport LogoutButton from './LogoutButton';\r\nimport Greeting from './Greeting';\r\n\r\nclass LoginControl extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleLoginClick = this.handleLoginClick.bind(this);\r\n      this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n      this.state = {isLoggedIn: false};\r\n    }\r\n  \r\n    handleLoginClick() {\r\n      this.setState({isLoggedIn: true});\r\n    }\r\n  \r\n    handleLogoutClick() {\r\n      this.setState({isLoggedIn: false});\r\n    }\r\n  \r\n    render() {\r\n      const isLoggedIn = this.state.isLoggedIn;\r\n      let button;\r\n\r\n      isLoggedIn ? button = <LogoutButton onClick={this.handleLogoutClick} /> : button = <LoginButton onClick={this.handleLoginClick} />\r\n  \r\n      return (\r\n        <div>\r\n          <Greeting isLoggedIn={isLoggedIn} />\r\n          {button}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default LoginControl;","import React from 'react';\r\n\r\nfunction WarningBanner(props) {\r\n    let result;\r\n    !props.warn ? result = null : result = (<div className=\"warning\">Warning!</div>);\r\n    return result;\r\n  }\r\n  \r\n  class Page extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {showWarning: false};\r\n      this.handleToggleClick = this.handleToggleClick.bind(this);\r\n    }\r\n  \r\n    handleToggleClick() {\r\n      this.setState(state => ({\r\n        showWarning: !state.showWarning\r\n      }));\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <button onClick={this.handleToggleClick}>\r\n            {this.state.showWarning ? 'Hide' : 'Show'}\r\n          </button>\r\n          <WarningBanner warn={this.state.showWarning} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Page;","import React from 'react';\r\n\r\nclass NameForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          value: ''\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      alert('A name was submitted: ' + this.state.value);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default NameForm;","import React from 'react';\r\n\r\nclass EssayForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: 'Please write an essay about your favorite DOM element.'\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      alert('An essay was submitted: ' + this.state.value);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Essay:\r\n            <textarea value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default EssayForm;","import React from 'react';\r\n\r\nclass FlavorForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: 'coconut'};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      alert('Your favorite flavor is: ' + this.state.value);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Pick your favorite flavor:\r\n            <select value={this.state.value} onChange={this.handleChange}>\r\n              <option value=\"grapefruit\">Grapefruit</option>\r\n              <option value=\"lime\">Lime</option>\r\n              <option value=\"coconut\">Coconut</option>\r\n              <option value=\"mango\">Mango</option>\r\n            </select>\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default FlavorForm;","import React from 'react'\r\n\r\nfunction ListItem(props) {\r\n    return <li>{props.value}</li>\r\n}\r\n\r\nfunction NumberList(props) {\r\n    const numbers = props.numbers;\r\n    return (\r\n        <ul>\r\n            {numbers.map((number) =>\r\n                <ListItem key={number.toString()}\r\n                value={number} />\r\n            )}\r\n        </ul>\r\n    );\r\n}\r\nexport default NumberList;","import React from 'react'\r\n\r\nclass Reservation extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isGoing: true,\r\n        numberOfGuests: 2\r\n      };\r\n  \r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n  \r\n    handleInputChange(event) {\r\n      const target = event.target;\r\n      const value = target.type === 'checkbox' ? target.checked : target.value;\r\n      const name = target.name;\r\n  \r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form>\r\n          <label>\r\n            Is going:\r\n            <input\r\n              name=\"isGoing\"\r\n              type=\"checkbox\"\r\n              checked={this.state.isGoing}\r\n              onChange={this.handleInputChange} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Number of guests:\r\n            <input\r\n              name=\"numberOfGuests\"\r\n              type=\"number\"\r\n              value={this.state.numberOfGuests}\r\n              onChange={this.handleInputChange} />\r\n          </label>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Reservation;","import React from 'react';\r\n\r\nfunction BoilingVerdict(props) {\r\n    if (props.celsius >= 100) {\r\n      return <p>The water would boil.</p>;\r\n    }\r\n    return <p>The water would not boil.</p>;\r\n  }\r\n\r\nexport default BoilingVerdict;","import React from 'react';\r\nimport BoilingVerdict from './BoilingVerdict';\r\n\r\nconst scaleNames = {\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n};\r\n\r\nfunction toCelsius(fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\n\r\nfunction toFahrenheit(celsius) {\r\n    return (celsius * 9 / 5) + 32;\r\n}\r\n\r\nfunction tryConvert(temperature, convert) {\r\n    const input = parseFloat(temperature);\r\n    if (Number.isNaN(input)) {\r\n        return '';\r\n    }\r\n    const output = convert(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n}\r\n\r\nclass TemperatureInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n    //   this.state = {\r\n    //       temperature: ''\r\n    //   };\r\n    }\r\n  \r\n    handleChange(e) {\r\n        this.props.onTemperatureChange(e.target.value);\r\n    }\r\n  \r\n    render() {\r\n      const temperature = this.props.temperature;\r\n      const scale = this.props.scale;\r\n      return (\r\n        <fieldset>\r\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n          <input\r\n            value={temperature}\r\n            onChange={this.handleChange} />\r\n        </fieldset>\r\n      );\r\n    }\r\n  }\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\r\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\r\n        this.state = {\r\n            temperature: '', scale: 'c'\r\n        };\r\n    }\r\n\r\n    handleCelsiusChange(temperature) {\r\n        this.setState({scale: 'c', temperature});\r\n    }\r\n    \r\n    handleFahrenheitChange(temperature) {\r\n        this.setState({scale: 'f', temperature});\r\n    }\r\n\r\n    render() {\r\n        const scale = this.state.scale;\r\n        const temperature = this.state.temperature;\r\n        const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\r\n        const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit): temperature;\r\n\r\n        return (\r\n            <div>\r\n                <TemperatureInput\r\n                scale=\"c\"\r\n                temperature={celsius}\r\n                onTemperatureChange={this.handleCelsiusChange} />\r\n        \r\n                <TemperatureInput\r\n                scale=\"f\"\r\n                temperature={fahrenheit}\r\n                onTemperatureChange={this.handleFahrenheitChange} />\r\n        \r\n                <BoilingVerdict\r\n                celsius={parseFloat(celsius)} />\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport './border.css';\r\n\r\n// function WelcomeDialog() {\r\n//     return (\r\n//       <Dialog\r\n//         title=\"Welcome\"\r\n//         message=\"Thank you for visiting our spacecraft!\" />\r\n  \r\n//     );\r\n// }\r\n\r\nfunction Dialog(props) {\r\n    return (\r\n      <FancyBorder color=\"blue\">\r\n        <h1 className=\"Dialog-title\">\r\n          {props.title}\r\n        </h1>\r\n        <p className=\"Dialog-message\">\r\n          {props.message}\r\n        </p>\r\n        {props.children}\r\n      </FancyBorder>\r\n    );\r\n}\r\n\r\nfunction FancyBorder(props) {\r\n    return (\r\n        <div className={'FancyBorder FancyBorder-' + props.color}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass SignUpDialog extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSignUp = this.handleSignUp.bind(this);\r\n      this.state = {login: ''};\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Dialog title=\"Mars Exploration Program\"\r\n                message=\"How should we refer to you?\">\r\n          <input value={this.state.login}\r\n                 onChange={this.handleChange} />\r\n  \r\n          <button onClick={this.handleSignUp}>\r\n            Sign Me Up!\r\n          </button>\r\n        </Dialog>\r\n      );\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.setState({login: e.target.value});\r\n    }\r\n  \r\n    handleSignUp() {\r\n      alert(`Welcome aboard, ${this.state.login}!`);\r\n    }\r\n  }\r\n\r\nexport default SignUpDialog;","import React from 'react';\nimport Clock from './components/Clock';\nimport Toggle from './components/Toggle';\nimport LoginControl from './components/LoginControl';\nimport WarningBanner from './components/WarningBanner';\nimport NumberList from './components/NumberList';\nimport NameForm from './components/NameForm';\nimport EssayForm from './components/EssayForm';\nimport FlavorForm from './components/FlavorForm';\nimport Reservation from './components/Reservation';\nimport BoilingVerdict from './components/BoilingVerdict';\nimport Calculator from './components/Calculator';\nimport FancyBorder from './components/FancyBorder';\nimport './App.css';\n// import { tsPropertySignature } from '@babel/types';\n\nfunction App() {\n  return (\n    <div>\n      {/* <Clock />\n      <Toggle />\n      <LoginControl />\n      <WarningBanner />\n      <NumberList \n        numbers = {[1,2,3,4,5]}\n      />\n      <NameForm />\n      <EssayForm />\n      <FlavorForm />\n      <Reservation /> \n      <BoilingVerdict /> */}\n      <Calculator />\n      <FancyBorder />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}